// This file isn't generated, but this comment is necessary to exclude it from StyleCop analysis.
// <auto-generated/>
using AE1.Api.Extensions.Injection;
using AE1.Api.Extensions.ServiceConfigurations;
using AE1.Api.Extensions.Validations;
using Scalar.AspNetCore;

var builder = WebApplication.CreateBuilder(args);
var services = builder.Services;
var env = builder.Environment;

services.RegisterMiddlewares();
services.ConfigureApiBehavior();
services.RegisterValidators();

var configurationBuilder = new ConfigurationBuilder()
    .SetBasePath(env.ContentRootPath)
    .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: false, reloadOnChange: true)
    .AddEnvironmentVariables();

var configuration = configurationBuilder.Build();

services.InjectInfrastructure(configuration, builder);
services.ConfigureIdentity(configuration);

var app = builder.Build();

// Configure OpenAPI for all environments except production
if (!env.IsProduction())
{
    app.ConfigureOpenApi();
}

// Configure security policies for production
if (env.IsProduction())
{
    app.UseSecurityPolicies();
}

app.UseAuthentication();
app.UseRouting();
app.UseAuthorization();
app.UseCors(cors => cors
    .WithOrigins(configuration.GetSection("AllowedOrigins").Get<string[]>())
    .AllowAnyMethod()
    .AllowAnyHeader());

app.UseEndpoints(endpoints =>
{
    endpoints.MapControllers();
});

app.Run();